{
  "stats": {
    "suites": 2,
    "tests": 6,
    "passes": 5,
    "pending": 0,
    "failures": 1,
    "start": "2022-07-09T09:02:07.476Z",
    "end": "2022-07-09T09:03:12.707Z",
    "duration": 65231,
    "testsRegistered": 6,
    "passPercent": 83.33333333333334,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "fc746675-83ba-431c-abf3-cb617e8e7e23",
      "title": "",
      "fullFile": "cypress\\e2e\\2-advanced-examples\\misc.cy.js",
      "file": "cypress\\e2e\\2-advanced-examples\\misc.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a716a97c-409a-4ce6-8a92-6e00cd074d87",
          "title": "Misc",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".end() - end the command chain",
              "fullTitle": "Misc .end() - end the command chain",
              "timedOut": null,
              "duration": 650,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/end\n// cy.end is useful when you want to end a chain of commands\n// and force Cypress to re-query from the root element\ncy.get('.misc-table').within(() => {\n  // ends the current chain and yields null\n  cy.contains('Cheryl').click().end(); // queries the entire table again\n  cy.contains('Charles').click();\n});",
              "err": {},
              "uuid": "9c794cb8-a571-4e50-8c3f-1f9d0a870fda",
              "parentUUID": "a716a97c-409a-4ce6-8a92-6e00cd074d87",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.exec() - execute a system command",
              "fullTitle": "Misc cy.exec() - execute a system command",
              "timedOut": null,
              "duration": 60455,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// execute a system command.\n// so you can take actions necessary for\n// your test outside the scope of Cypress.\n// https://on.cypress.io/exec\n// we can use Cypress.platform string to\n// select appropriate command\n// https://on.cypress/io/platform\ncy.log(`Platform ${Cypress.platform} architecture ${Cypress.arch}`); // on CircleCI Windows build machines we have a failure to run bash shell\n// https://github.com/cypress-io/cypress/issues/5169\n// so skip some of the tests by passing flag \"--env circle=true\"\nconst isCircleOnWindows = Cypress.platform === 'win32' && Cypress.env('circle');\nif (isCircleOnWindows) {\n  cy.log('Skipping test on CircleCI');\n  return;\n} // cy.exec problem on Shippable CI\n// https://github.com/cypress-io/cypress/issues/6718\n\nconst isShippable = Cypress.platform === 'linux' && Cypress.env('shippable');\nif (isShippable) {\n  cy.log('Skipping test on ShippableCI');\n  return;\n}\ncy.exec('echo Jane Lane').its('stdout').should('contain', 'Jane Lane');\nif (Cypress.platform === 'win32') {\n  cy.exec(`print ${Cypress.config('configFile')}`).its('stderr').should('be.empty');\n} else {\n  cy.exec(`cat ${Cypress.config('configFile')}`).its('stderr').should('be.empty');\n  cy.exec('pwd').its('code').should('eq', 0);\n}",
              "err": {
                "message": "CypressError: `cy.exec('print cypress.config.js')` timed out after waiting `60000ms`.\n\nhttps://on.cypress.io/exec",
                "estack": "CypressError: `cy.exec('print cypress.config.js')` timed out after waiting `60000ms`.\n\nhttps://on.cypress.io/exec\n    at https://example.cypress.io/__cypress/runner/cypress_runner.js:154614:85\n    at tryCatcher (https://example.cypress.io/__cypress/runner/cypress_runner.js:13012:23)\n    at https://example.cypress.io/__cypress/runner/cypress_runner.js:8134:41\n    at tryCatcher (https://example.cypress.io/__cypress/runner/cypress_runner.js:13012:23)\n    at Promise._settlePromiseFromHandler (https://example.cypress.io/__cypress/runner/cypress_runner.js:10947:31)\n    at Promise._settlePromise (https://example.cypress.io/__cypress/runner/cypress_runner.js:11004:18)\n    at Promise._settlePromise0 (https://example.cypress.io/__cypress/runner/cypress_runner.js:11049:10)\n    at Promise._settlePromises (https://example.cypress.io/__cypress/runner/cypress_runner.js:11125:18)\n    at _drainQueueStep (https://example.cypress.io/__cypress/runner/cypress_runner.js:7719:12)\n    at _drainQueue (https://example.cypress.io/__cypress/runner/cypress_runner.js:7712:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (https://example.cypress.io/__cypress/runner/cypress_runner.js:7728:5)\n    at Async.drainQueues (https://example.cypress.io/__cypress/runner/cypress_runner.js:7598:14)\nFrom Your Spec Code:\n    at Context.eval (https://example.cypress.io/__cypress/tests?p=cypress\\e2e\\2-advanced-examples\\misc.cy.js:146:10)",
                "diff": null
              },
              "uuid": "b69f88b3-1ddb-4706-b2f0-0bf5da3784d2",
              "parentUUID": "a716a97c-409a-4ce6-8a92-6e00cd074d87",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.focused() - get the DOM element that has focus",
              "fullTitle": "Misc cy.focused() - get the DOM element that has focus",
              "timedOut": null,
              "duration": 628,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/focused\ncy.get('.misc-form').find('#name').click();\ncy.focused().should('have.id', 'name');\ncy.get('.misc-form').find('#description').click();\ncy.focused().should('have.id', 'description');",
              "err": {},
              "uuid": "c3773866-4de7-43fc-98da-c405cb400927",
              "parentUUID": "a716a97c-409a-4ce6-8a92-6e00cd074d87",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.wrap() - wrap an object",
              "fullTitle": "Misc cy.wrap() - wrap an object",
              "timedOut": null,
              "duration": 185,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/wrap\ncy.wrap({\n  foo: 'bar'\n}).should('have.property', 'foo').and('include', 'bar');",
              "err": {},
              "uuid": "90bf2ac3-d1ab-4c63-a6ec-2379a28406a6",
              "parentUUID": "a716a97c-409a-4ce6-8a92-6e00cd074d87",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "14a5eae2-b58c-4afe-a246-0a646ea40392",
              "title": "Cypress.Screenshot",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "cy.screenshot() - take a screenshot",
                  "fullTitle": "Misc Cypress.Screenshot cy.screenshot() - take a screenshot",
                  "timedOut": null,
                  "duration": 1418,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/screenshot\ncy.screenshot('my-image');",
                  "err": {},
                  "uuid": "d338936c-fe07-46b4-9a56-c813a5a81efd",
                  "parentUUID": "14a5eae2-b58c-4afe-a246-0a646ea40392",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Cypress.Screenshot.defaults() - change default config of screenshots",
                  "fullTitle": "Misc Cypress.Screenshot Cypress.Screenshot.defaults() - change default config of screenshots",
                  "timedOut": null,
                  "duration": 180,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "Cypress.Screenshot.defaults({\n  blackout: ['.foo'],\n  capture: 'viewport',\n  clip: {\n    x: 0,\n    y: 0,\n    width: 200,\n    height: 200\n  },\n  scale: false,\n  disableTimersAndAnimations: true,\n  screenshotOnRunFailure: true,\n  onBeforeScreenshot() {},\n  onAfterScreenshot() {}\n});",
                  "err": {},
                  "uuid": "8c7812bc-410f-491e-b833-f28cfb31a272",
                  "parentUUID": "14a5eae2-b58c-4afe-a246-0a646ea40392",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d338936c-fe07-46b4-9a56-c813a5a81efd",
                "8c7812bc-410f-491e-b833-f28cfb31a272"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1598,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "9c794cb8-a571-4e50-8c3f-1f9d0a870fda",
            "c3773866-4de7-43fc-98da-c405cb400927",
            "90bf2ac3-d1ab-4c63-a6ec-2379a28406a6"
          ],
          "failures": [
            "b69f88b3-1ddb-4706-b2f0-0bf5da3784d2"
          ],
          "pending": [],
          "skipped": [],
          "duration": 61918,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}